#version 150

uniform mat4 camera;
uniform mat4 model;

uniform vec3 cameraRight_ws;
uniform vec3 cameraUp_ws;
uniform vec3 centerPos_ws;

in vec3 vert;
in vec2 vertTexCoord;
in vec3 vertNormal;

out vec3 fragVert;
out vec2 fragTexCoord;
out vec3 fragNormal;

void main() {
    // Pass some variables to the fragment shader
    fragTexCoord = vertTexCoord;
    fragNormal = vertNormal;
    fragVert = vert;
    
    // Apply all matrix transformations to vert
    gl_Position = camera * model * vec4(vert, 1);
//	vec3 vp_ws = cameraRight_ws * vert.x + cameraUp_ws * vert.y;
//	gl_Position = camera * model * vec4(vp_ws,1);
}
